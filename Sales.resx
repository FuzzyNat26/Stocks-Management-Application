<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAA9IQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAAOxAAADsQBlSsOGwAAC7JpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdp
        bj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0i
        YWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDYuMC1jMDAyIDc5LjE2NDQ2MCwg
        MjAyMC8wNS8xMi0xNjowNDoxNyAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3
        LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJv
        dXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczpwaG90b3No
        b3A9Imh0dHA6Ly9ucy5hZG9iZS5jb20vcGhvdG9zaG9wLzEuMC8iIHhtbG5zOmRjPSJodHRwOi8vcHVy
        bC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6eG1wTU09Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFw
        LzEuMC9tbS8iIHhtbG5zOnN0RXZ0PSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUvUmVz
        b3VyY2VFdmVudCMiIHhtbG5zOnN0UmVmPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvc1R5cGUv
        UmVzb3VyY2VSZWYjIiB4bWxuczp0aWZmPSJodHRwOi8vbnMuYWRvYmUuY29tL3RpZmYvMS4wLyIgeG1s
        bnM6ZXhpZj0iaHR0cDovL25zLmFkb2JlLmNvbS9leGlmLzEuMC8iIHhtcDpDcmVhdG9yVG9vbD0iQWRv
        YmUgUGhvdG9zaG9wIENDIChXaW5kb3dzKSIgeG1wOkNyZWF0ZURhdGU9IjIwMjEtMDQtMDdUMTY6Mjk6
        MTcrMDc6MDAiIHhtcDpNZXRhZGF0YURhdGU9IjIwMjEtMDQtMDhUMTc6NTY6MDgrMDc6MDAiIHhtcDpN
        b2RpZnlEYXRlPSIyMDIxLTA0LTA4VDE3OjU2OjA4KzA3OjAwIiBwaG90b3Nob3A6Q29sb3JNb2RlPSIz
        IiBwaG90b3Nob3A6SUNDUHJvZmlsZT0ic1JHQiBJRUM2MTk2Ni0yLjEiIGRjOmZvcm1hdD0iaW1hZ2Uv
        cG5nIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOmRjNWQ0MGNkLTU4Y2YtYmE0Ny1hMmZmLWVkNjIx
        MDc5YjcyNCIgeG1wTU06RG9jdW1lbnRJRD0iYWRvYmU6ZG9jaWQ6cGhvdG9zaG9wOjQ5MDM5ZTc0LTE1
        YjktMzE0MC1iZTYwLWEyOTNjZTRkMDNkYyIgeG1wTU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlk
        OjYxYWFiZDkwLTA5NWUtMzk0Mi04OTY2LTllZTU3YTY4ZmJjYyIgdGlmZjpPcmllbnRhdGlvbj0iMSIg
        dGlmZjpYUmVzb2x1dGlvbj0iNzIwMDAwLzEwMDAwIiB0aWZmOllSZXNvbHV0aW9uPSI3MjAwMDAvMTAw
        MDAiIHRpZmY6UmVzb2x1dGlvblVuaXQ9IjIiIGV4aWY6Q29sb3JTcGFjZT0iMSIgZXhpZjpQaXhlbFhE
        aW1lbnNpb249IjUxMiIgZXhpZjpQaXhlbFlEaW1lbnNpb249IjUxMiI+IDxwaG90b3Nob3A6VGV4dExh
        eWVycz4gPHJkZjpCYWc+IDxyZGY6bGkgcGhvdG9zaG9wOkxheWVyTmFtZT0iKyIgcGhvdG9zaG9wOkxh
        eWVyVGV4dD0iKyIvPiA8cmRmOmxpIHBob3Rvc2hvcDpMYXllck5hbWU9Ii0iIHBob3Rvc2hvcDpMYXll
        clRleHQ9Ii0iLz4gPHJkZjpsaSBwaG90b3Nob3A6TGF5ZXJOYW1lPSIlIiBwaG90b3Nob3A6TGF5ZXJU
        ZXh0PSIlIi8+IDxyZGY6bGkgcGhvdG9zaG9wOkxheWVyTmFtZT0ieCIgcGhvdG9zaG9wOkxheWVyVGV4
        dD0ieCIvPiA8L3JkZjpCYWc+IDwvcGhvdG9zaG9wOlRleHRMYXllcnM+IDx4bXBNTTpIaXN0b3J5PiA8
        cmRmOlNlcT4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNyZWF0ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9Inht
        cC5paWQ6NjFhYWJkOTAtMDk1ZS0zOTQyLTg5NjYtOWVlNTdhNjhmYmNjIiBzdEV2dDp3aGVuPSIyMDIx
        LTA0LTA3VDE2OjI5OjE3KzA3OjAwIiBzdEV2dDpzb2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3Ag
        Q0MgKFdpbmRvd3MpIi8+IDxyZGY6bGkgc3RFdnQ6YWN0aW9uPSJzYXZlZCIgc3RFdnQ6aW5zdGFuY2VJ
        RD0ieG1wLmlpZDpjYTcyZDBjYi1lNjFlLWNjNDItYWY3Ni0yN2U1ZmFjZmFmMTEiIHN0RXZ0OndoZW49
        IjIwMjEtMDQtMDdUMTg6MTE6NTQrMDc6MDAiIHN0RXZ0OnNvZnR3YXJlQWdlbnQ9IkFkb2JlIFBob3Rv
        c2hvcCAyMS4yIChXaW5kb3dzKSIgc3RFdnQ6Y2hhbmdlZD0iLyIvPiA8cmRmOmxpIHN0RXZ0OmFjdGlv
        bj0ic2F2ZWQiIHN0RXZ0Omluc3RhbmNlSUQ9InhtcC5paWQ6YzkyZDM0ODgtODIzNy05ZTQzLWI5MjUt
        MTI5M2MxMzk3M2RkIiBzdEV2dDp3aGVuPSIyMDIxLTA0LTA4VDE3OjU2OjA4KzA3OjAwIiBzdEV2dDpz
        b2Z0d2FyZUFnZW50PSJBZG9iZSBQaG90b3Nob3AgMjEuMiAoV2luZG93cykiIHN0RXZ0OmNoYW5nZWQ9
        Ii8iLz4gPHJkZjpsaSBzdEV2dDphY3Rpb249ImNvbnZlcnRlZCIgc3RFdnQ6cGFyYW1ldGVycz0iZnJv
        bSBhcHBsaWNhdGlvbi92bmQuYWRvYmUucGhvdG9zaG9wIHRvIGltYWdlL3BuZyIvPiA8cmRmOmxpIHN0
        RXZ0OmFjdGlvbj0iZGVyaXZlZCIgc3RFdnQ6cGFyYW1ldGVycz0iY29udmVydGVkIGZyb20gYXBwbGlj
        YXRpb24vdm5kLmFkb2JlLnBob3Rvc2hvcCB0byBpbWFnZS9wbmciLz4gPHJkZjpsaSBzdEV2dDphY3Rp
        b249InNhdmVkIiBzdEV2dDppbnN0YW5jZUlEPSJ4bXAuaWlkOmRjNWQ0MGNkLTU4Y2YtYmE0Ny1hMmZm
        LWVkNjIxMDc5YjcyNCIgc3RFdnQ6d2hlbj0iMjAyMS0wNC0wOFQxNzo1NjowOCswNzowMCIgc3RFdnQ6
        c29mdHdhcmVBZ2VudD0iQWRvYmUgUGhvdG9zaG9wIDIxLjIgKFdpbmRvd3MpIiBzdEV2dDpjaGFuZ2Vk
        PSIvIi8+IDwvcmRmOlNlcT4gPC94bXBNTTpIaXN0b3J5PiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6
        aW5zdGFuY2VJRD0ieG1wLmlpZDpjOTJkMzQ4OC04MjM3LTllNDMtYjkyNS0xMjkzYzEzOTczZGQiIHN0
        UmVmOmRvY3VtZW50SUQ9InhtcC5kaWQ6NjFhYWJkOTAtMDk1ZS0zOTQyLTg5NjYtOWVlNTdhNjhmYmNj
        IiBzdFJlZjpvcmlnaW5hbERvY3VtZW50SUQ9InhtcC5kaWQ6NjFhYWJkOTAtMDk1ZS0zOTQyLTg5NjYt
        OWVlNTdhNjhmYmNjIi8+IDwvcmRmOkRlc2NyaXB0aW9uPiA8L3JkZjpSREY+IDwveDp4bXBtZXRhPiA8
        P3hwYWNrZXQgZW5kPSJyIj8+WC1UuwAAFTFJREFUeJzt3XuwXWV9xvHv+3qwhqsGR8QJFwGxBEGjYDvi
        eFQkw4vhIjdpgQAWmdEiRPtHcEIV0bTwRzUgQztOGpBLpYGEW/Cn8Yot0hZqNBBQREBMNSigoyFxMLyr
        f5x9knPZ55x9WWu9a+31fGYynLP32ms9w1nr2e9ee10cUmsxhP2Ao4B3AG8F3gzsXNDitgA/An4AfB+4
        z5v9vKBlSQlc6gAysxjCbsApwGlAoLp/twww4DbgNm/2h8R5ZAZVXZEaq7WxXwT8LbB34jh52QRcA1yt
        UqgWFUBiMYRDgEuBv06dpWT/BnzOmz2aOkiTqQBKFkN4BfCPwKLUWSpmGfBJb/bH1EGaRAVQghjC4cAK
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>